{"version":3,"sources":["comp/LoadData.js","comp/Map.jsx","comp/Covid19.jsx","App.js","index.js"],"names":["data","console","log","i","reg","countries","properties","found","find","covidreg","attributes","REG_CODE","region_id","slice","cases","TotalConfirmed","min","max","name","Region_Name_AR","color","getColor","casesNum","numberWithCommas","active","TotalActive","deaths","TotalDeaths","recovered","TotalRecovered","this","length","setTimeout","setData","x","toString","replace","d","LoadData","features","load","a","fetch","then","response","json","infoTable","props","flag","total","population","name_en","p","cummaNum","toFixed","Map","mymap","customInfo","highlightSpot","e","layer","target","setStyle","weight","dashArray","fillOpacity","L","Browser","ie","opera","edge","bringToFront","update","feature","resetHighlight","options","style","ZoomToRegion","fitBounds","getBounds","Info","map","useMap","info","control","position","onAdd","_div","DomUtil","create","innerHTML","infoText","addTo","removeDuplicate","Legend","legend","div","grades","classname","classes","document","getElementsByClassName","node","parentNode","removeChild","MapContainer","className","center","zoom","TileLayer","attribution","url","GeoJSON","onEachFeature","prop","fillColor","bindPopup","on","mouseover","mouseout","click","Covid19","handleData","setState","removeLoader","l","getElementById","state","loading","React","Component","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9984255d.chunk.js","sourcesContent":["import { features } from \"../data/regions.json\";\n\n\nclass LoadData {\n\n    setData   = null;\n    countries = features;\n\n    max = 0;\n    min = 0;\n\n    load = async (setData) => {\n        console.log(\"Loading ...\");\n        this.setData = setData;\n\n        const data = await fetch('https://services6.arcgis.com/bKYAIlQgwHslVRaK/arcgis/rest/services/CasesByRegion_ViewLayer/FeatureServer/0/query?where=1%3D1&outFields=*&outSR=4326&f=json').then(response => response.json());\n\n        \n        this.#processData(data.features);\n    }\n\n    #processData(data) {\n        console.log(\"yes work\");\n        for(let i = 0; i < this.countries.length; i++) {\n            const reg      = this.countries[i].properties;\n\n            const found = data.find(\n                (covidreg) => {\n                    return covidreg.attributes.REG_CODE === (\"R\" + ('0' + reg.region_id).slice(-2));\n                }\n            ).attributes;\n            if(found) {\n                const cases = found.TotalConfirmed;\n\n                if(cases < this.min || this.min === 0 ) {\n                    this.min = cases;\n                }\n                if(cases > this.max) {\n                    this.max = cases;\n                }\n                reg.name  = found.Region_Name_AR;\n                reg.color = getColor(cases);\n\n                reg.casesNum = cases;\n                reg.cases = numberWithCommas(cases);\n                reg.active = found.TotalActive;\n                reg.deaths = found.TotalDeaths;\n                reg.recovered = found.TotalRecovered;\n\n            }\n        }\n        console.log(\"this.max: \" + this.max);\n        console.log(\"this.min: \" + this.min);\n        setTimeout(() => this.setData(this.countries),\n            2000);\n    }\n}\n\n\nexport const numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport const getColor = (d) => {\n    return (\n         d < 2_000   ? \"#fee5d9\" :\n         d < 5_000   ? \"#fcbba1\" :\n         d < 10_000  ? \"#fc9272\" :\n         d < 20_000  ? \"#fb6a4a\" :\n         d < 50_000  ? \"#de2d26\" :\n         d < 100_000 ? \"#cb181d\" :\n                      \"#99000d\"\n    );\n}\n\n\nexport default LoadData;\n\n\n// \n// class LoadData {\n// \n//     setHotspots = null;\n//     hotspots    = features;\n// \n//     load = (setHotspots, setLoading) => {\n//         this.setHotspots = setHotspots;\n//         console.log(\"loading...\");\n//         for(let i = 0; i < this.hotspots.length; i++) {\n//             const spot = this.hotspots[i].properties;\n//             spot.name = spot.name_ar;\n//             spot.color  = getColor(spot.population);\n//             spot.accidents = numberWithCommas(spot.population);\n//         }\n//         setHotspots(this.hotspots);\n//         setTimeout(() => {                  /* DEBUG debug simulate waiting for loading !!! */\n//            setLoading(false);\n//         }, 2500);\n//     }\n// \n// }\n// \n// const numberWithCommas = (x) => {\n//     x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n// }\n// \n// \n// const getColor = (d) => {\n//     return (\n//         d > 5_000_000 ? \"#800026\" :\n//         d > 1_000_000  ? \"#bd0026\" :\n//         d > 500_000  ? \"#e31a1c\" :\n//         d > 100_000  ? \"#fc4e2a\" :\n//         d > 50_000   ? \"#fd8d3c\" :\n//         d > 10_000   ? \"#feb24c\" :\n//         d > 5_000   ? \"#fed976\" :\n//         d > 1_000   ? \"#ffeda0\" :\n//                 \"#ffffcc\" \n//     );\n// }\n// \n// export default LoadData;\n// \n","import { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, GeoJSON, useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nimport LoadData, { getColor, numberWithCommas as cummaNum } from \"./LoadData.js\";\n\n\nconst Map = ({ data }) => {\n\n    var mymap      = null;\n    var customInfo = null;\n\n    const onEachRegion = (feature, layer) => {\n        \n        const prop = feature.properties;\n\n        const name  = prop.name;\n        const cases = prop.cases;\n\n        layer.options.fillColor = feature.properties.color;\n\n        //const text = popupText(name, cases);\n        layer.bindPopup(infoTable(feature.properties, true));\n        // layer.bindTooltip(\"string\", {sticky: true});\n\n        layer.on({\n            mouseover: highlightSpot,\n            mouseout: resetHighlight,\n            click: ZoomToRegion,\n        });\n    };\n    function highlightSpot(e) {\n        var layer = e.target;\n\n        layer.setStyle({\n            weight: 5,\n            color: 'black',\n            dashArray: '',\n            fillOpacity: 0.9,\n        });\n\n        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n            layer.bringToFront();\n        }\n        (customInfo ?\n            customInfo.update(layer.feature.properties)\n            : console.log(\"Error: No info refrence found in [customInfo]\")\n        );\n    }\n    function resetHighlight(e) {\n            e.target.setStyle(e.target.options.style);\n            (customInfo ?\n                customInfo.update()\n                : console.log(\"Error: No info refrence found in [customInfo]\")\n            );\n    }\n    function ZoomToRegion(e) {\n        (mymap ?\n            mymap.fitBounds(e.target.getBounds())\n            :\n            console.log(\"Error: mymap has no ref in ZoomToSpot\")\n        );\n    }\n\n    const Info = () => {\n        const map = useMap();\n\n        var info = L.control({position:'topright'});\n\n        if(!customInfo) {\n            customInfo = info;\n        }\n      \n        info.onAdd = function (map) {\n          this._div = L.DomUtil.create('div', 'info custom-info');\n          this.update();\n          return this._div;\n        };\n        info.update = function (props) {\n           this._div.innerHTML = infoText(props, false);      \n        };\n        info.addTo(map);\n        removeDuplicate(\"custom-info\");\n        return null;\n    }\n\n    const Panel = () => {\n        const map = useMap();\n\n        var info = L.control({position:'topleft'});\n\n        info.onAdd = function (map) {\n          this._div = L.DomUtil.create('div', 'info custom-panel');\n          this.update();\n          return this._div;\n        };\n        info.update = function (props) {\n           this._div.innerHTML = \"hello world\";      \n        };\n        info.addTo(map);\n        removeDuplicate(\"custom-panel\");\n        return null;\n    }\n\n    const Legend = () => {\n        const map = useMap();\n        mymap = map;\n\n        var legend = L.control({position:'bottomright'});\n\n        legend.onAdd = function (map) {\n            var div = L.DomUtil.create('div', 'info legend'),\n            grades = [0, 2000, 5000, 10_000, 20_000, 50_000, 100_000];\n\n            for(let i = 0; i < grades.length; i++) {\n                div.innerHTML +=\n                    '<div>' +\n                        '<span class=\"legend-block\" style=\"background-color: ' + getColor(grades[i]) + ';\"></span>' +\n                        '<span>' + (grades[i + 1] ? '&lt; ' + cummaNum(grades[i+1]) : ' ' + '+ ' + cummaNum(grades[i])) +\n                    '</div>'\n            }\n            return div;\n        };\n        legend.addTo(map);\n        removeDuplicate(\"legend\");\n        return null;\n    }\n\n     const removeDuplicate = (classname) => {\n         const classes = document.getElementsByClassName(classname);\n    \n         if(classes && classes.length > 1) {\n            var node = classes[1];\n            node.parentNode.removeChild(node);\n        }\n        return true;\n    }\n\n\n    if(!data) {\n        return null;\n    } else {\n        console.log(data)\n    }\n    return (\n        <MapContainer className=\"Map\" center={[26, 45]} zoom={5} >\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n            />\n            <GeoJSON style={{color: \"black\", weight: 1, fillOpacity: 0.7}} data={data} onEachFeature={onEachRegion} />\n        \n            <Legend />\n            <Info />\n        </MapContainer>\n    );\n}\n\nfunction infoText(props) {\n    return (\n        '<h5 class=\"info-header\">Covid-19 Cases</h5>' + infoTable(props)\n    );\n}\n\nconst infoTable = (props, flag) => {\n    const total = props ? props.population : 1;\n    const cases = props ? props.casesNum : 1;\n    return ( \n        (props ?\n        '<table class=\"table table-dark table-bordered\">' +\n            '<thead>' +\n                '<tr>' +\n                    '<th id=\"table-head\" colspan=\"2\">' + props.name_en + '</th>' +\n                    (flag ? \n                        '<th colspan=\"1\">% of Pop.</th>' + \n                        '<th colspan=\"1\"> % of Cases</th>'\n                        : '' ) + \n                '</tr>' +\n            '</thead>' +\n            '<tr>' +\n                '<th>Total</th><td>' + props.cases + '</td>' + \n                (flag ? \n                    '<td colspan=\"2\"> ' + p(props.casesNum, total) + '% </td>' \n                    : '' ) + \n            '</tr>' +\n            '<tr>' +\n                '<th>Active</th><td>' + cummaNum(props.active) + '</td>' +\n                (flag ? \n                    '<td> ' + p(props.active, total) + '% </td>' + \n                    '<td> ' + p(props.active, cases) + '% </td>'\n                    : '' ) + \n            '</tr>' +\n            '<tr>' +\n                '<th>Recovered</th><td>' + cummaNum(props.recovered) + '</td>' +\n                (flag ? \n                    '<td> ' + p(props.recovered, total) + '% </td>' + \n                    '<td> ' + p(props.recovered, cases) + '% </td>'\n                    : '' ) + \n            '</tr>' +\n            '</tr>' +\n            '<tr>' +\n                '<th>Deaths</th><td>' + cummaNum(props.deaths) + '</td>' +\n                (flag ? \n                    '<td> ' + p(props.deaths, total) + '% </td>' + \n                    '<td> ' + p(props.deaths, cases) + '% </td>'\n                    : '' ) + \n            '</tr>' +\n            '</tr>' +\n        '</table>'\n            : '<div>Click or hover over a region.</div>')\n    );\n}\n\nconst p = (d, total) => {\n    return ((d / total) * 100).toFixed(2);\n}\n\nexport default Map;\n\n","import React from \"react\";\n\nimport Map from \"./Map.jsx\";\nimport LoadData from \"./LoadData.js\";\n\nclass Covid19 extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        }\n    }\n\n    handleData = (data) => {\n        this.setState({\n            data: data,\n        });\n    }\n    removeLoader = () => {\n        var l = document.getElementById(\"covid-loader\");\n        (l ?\n            l.parentNode.removeChild(l)\n            :\n            console.log(\"Not found\")\n        )\n    }\n\n    componentDidMount() {\n        const loader = new LoadData();\n        loader.load(this.handleData)\n        .then(() => console.log(\"Done mount\"));\n    }\n\n    render() {\n        if(!this.state.data) {\n            return null;\n        }\n        else {\n            this.removeLoader();\n        }\n       return (\n             <div className=\"main-theme\">\n                <div className=\"main-header\">\n                    Covid19\n                </div>\n                <Map data={this.state.data} />\n            </div>\n        );\n    }\n}\n\nexport default Covid19;\n","import Covid19 from \"./comp/Covid19.jsx\";\nimport Map from \"./comp/Map.jsx\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div>\n        <Covid19 />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}